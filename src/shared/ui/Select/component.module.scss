@use "/src/app/styles/_variables" as vars;
@use "/src/app/styles/_mixins" as mixins;

.default {
    position: relative;
    @include mixins.flex(column) {
        align-items: flex-start;
        gap: calc(map-get(vars.$gaps, default) / 4);
    };
    @include mixins.cursorPointer;
}

.select.select {
    @include mixins.flex;
    padding: map-get(vars.$paddings, select);
    border-radius: map-get(vars.$radius, sm);
    @include mixins.placeholder;
    cursor: inherit;
    background: map-get(vars.$colors, white1);
}
.active {
    @include mixins.border($color: map-get(vars.$colors, orange));
    & .arrow {
        transform: rotate(180deg);
    }
}

.label {
    @include mixins.label($color: map-get(vars.$colors, black));
}

.placeholder {
    @include mixins.label($color: map-get(vars.$colors, gray2));
}

.options {
    position: absolute;
    top: 110%;
    left: 0;
    width: 100%;
    z-index: map-get(vars.$zIndex, select);
    @include mixins.flex(column) {
        align-items: stretch;
        gap: calc(map-get(vars.$gaps, default) / 4);
    };
    max-height: 200px;
    overflow-y: auto;
    border-radius: map-get(vars.$radius, sm);
    padding: calc(map-get(vars.$paddings, default) / 2);
    background: map-get(vars.$colors, white1);
    box-shadow: map-get(vars.$shadows, options);

    &::-webkit-scrollbar {
        width: 4px;
        border-radius: map-get(vars.$radius, sm);
    }

    &::-webkit-scrollbar-thumb {
        background: map-get(vars.$colors, gray3);
        border-radius: map-get(vars.$radius, sm);
    }
}
.option.option {
    border: none;
    width: 100%;
    justify-content: flex-start;
}
.selected.selected {
    background: map-get(vars.$colors, orange);
    color: map-get(vars.$colors, white1);
}

